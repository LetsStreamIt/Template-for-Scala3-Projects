name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:
jobs:
  build:
    strategy:
      fail-fast: false
      matrix: 
        os: [ubuntu, windows, macos]
    runs-on: ${{ matrix.os }}-latest
    env:
      ci: true
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - name: Set up JDK
        uses: actions/setup-java@v4.6.0
        with:
          distribution: temurin
          java-version: 17
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.5
      - name: Build and test
        shell: bash
        run: sbt -v +test
      - name: Check formatting
        shell: bash
        run: sbt -v scalafmtCheckAll
      - name: Run linter
        shell: bash
        run: sbt -v "scalafixAll --check"

  compute-next-version:
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
        will-release: ${{ steps.compute-next-version.outputs.will-release }}
        next-version: ${{ steps.compute-next-version.outputs.next-version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.1
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'npm'
      - name: Pre-compute the next version
        id: compute-next-version
        uses: nicolasfara/precompute-semantic-release-version-action@2.0.1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
      - name: Use the next version
        run: |
          echo "Will release: ${{ steps.compute-next-version.outputs.will-release }}"
          echo "The next version is ${{ steps.compute-next-version.outputs.next-version }}"

  release:
    permissions:
      contents: write
      packages: write
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: release-${{ github.event.number || github.ref }}
    runs-on: ubuntu-latest
    needs:
      - compute-next-version
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - uses: actions/setup-node@v4.1.0
        with:
          cache: npm
          node-version: lts/*
      - run: npm clean-install
      - env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - release
      - compute-next-version
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}

